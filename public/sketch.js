let croquetilla = [
    [389, 176, 378, 175, 368, 177, 357, 180, 347, 183, 337, 190, 326, 197, 317, 207, 310, 217, 304, 226, 300, 236, 294, 247, 291, 257, 291, 268, 291, 279, 292, 290, 294, 301, 297, 311, 301, 321, 305, 331, 311, 343, 317, 352, 330, 366, 340, 374, 350, 382, 362, 388, 374, 394, 384, 396, 396, 400, 406, 402, 418, 402, 430, 402, 441, 402, 452, 400, 462, 397, 472, 393, 481, 386, 490, 380, 497, 371, 504, 363, 508, 353, 514, 344, 518, 333, 521, 323, 521, 312, 522, 302, 522, 291, 522, 280, 521, 270, 517, 260, 513, 250, 508, 241, 503, 230, 498, 221, 493, 212, 485, 204, 477, 196, 469, 189, 460, 183, 450, 180, 439, 177, 429, 175, 419, 174, 409, 173, 399, 172, 388, 172],
    [398, 171, 400, 181, 401, 191, 402, 201, 402, 212, 402, 223, 402, 234, 400, 245, 397, 255, 392, 265, 386, 274, 379, 282, 371, 289, 361, 294, 350, 296, 340, 299, 330, 300, 320, 301, 309, 302, 298, 302, 286, 304, 275, 309, 266, 314, 257, 320, 249, 327, 241, 334, 234, 342, 229, 351, 226, 362, 222, 372, 218, 383, 222, 393, 234, 398, 245, 400, 255, 401, 266, 401, 277, 401, 288, 399, 298, 397, 308, 395, 317, 389, 325, 381, 332, 373],
    [397, 175, 397, 186, 398, 196, 399, 206, 399, 217, 399, 228, 403, 238, 406, 248, 411, 259, 416, 268, 421, 277, 428, 285, 436, 293, 446, 299, 455, 306, 466, 311, 476, 315, 488, 318, 498, 321, 508, 323, 518, 324, 528, 325, 539, 327, 549, 330, 560, 334, 569, 339, 579, 345, 588, 351, 597, 357, 604, 367, 610, 376, 616, 387, 623, 395, 632, 400, 622, 402, 610, 401, 599, 401, 589, 399, 579, 397, 569, 394, 559, 391, 549, 387, 538, 382, 528, 378, 519, 373, 509, 369, 500, 364],
    [381, 294, 380, 304, 380, 315, 380, 326, 381, 336],
    [432, 299, 430, 311, 430, 323, 430, 334, 430, 345],
    [355, 359, 364, 364, 374, 369, 385, 373, 396, 376, 406, 377, 416, 378, 426, 380, 437, 379, 448, 376, 457, 371],
    [373, 394, 373, 405, 372, 415, 373, 425, 372, 435, 371, 445, 372, 456, 372, 467, 362, 471, 353, 466, 361, 459, 371, 460],
    [445, 400, 444, 411, 442, 421, 441, 431, 440, 441, 440, 452, 440, 463, 448, 470, 457, 465, 449, 458, 441, 465],
    [298, 303, 288, 299, 278, 294, 267, 288, 257, 285, 247, 280, 237, 277, 227, 271, 218, 266, 214, 256, 204, 254, 201, 264, 208, 272, 218, 270],
    [200, 264, 189, 264, 178, 264, 168, 263, 157, 263, 146, 263, 135, 263, 125, 262, 114, 262, 103, 262, 93, 261, 82, 261, 77, 252, 75, 242, 75, 231, 74, 220, 75, 209, 75, 197, 74, 186, 74, 175, 74, 164, 74, 153, 74, 142, 74, 131, 85, 129, 95, 130, 107, 130, 119, 130, 131, 130, 143, 130, 155, 131, 167, 131, 179, 131, 190, 131, 201, 131, 212, 131, 217, 140, 217, 151, 218, 162, 219, 172, 221, 182, 221, 194, 221, 206, 222, 216, 222, 227, 222, 238, 221, 248, 220, 258],
    [95, 160, 95, 171, 96, 181, 97, 191, 98, 201],
    [93, 162, 103, 160, 113, 164, 113, 175, 103, 179, 93, 180],
    [121, 161, 131, 162, 141, 163],
    [122, 163, 120, 173, 130, 177, 140, 179, 139, 189, 131, 197, 121, 196],
    [145, 194],
    [148, 193, 143, 202],
    [174, 165, 173, 175, 173, 186, 170, 196, 160, 199],
    [200, 166, 190, 169, 185, 178, 194, 186, 204, 190, 200, 200, 190, 202],
    [520, 324, 530, 318, 538, 310, 547, 303, 555, 295, 562, 286, 565, 276, 566, 265, 575, 260, 585, 264, 583, 274, 574, 279, 564, 278]
]

let lighthouse = [
    [466, 394, 466, 383, 470, 371, 479, 357, 481, 345, 484, 325, 486, 309, 487, 299, 488, 286, 489, 275, 491, 265, 491, 254, 492, 244, 493, 233, 494, 221, 494, 210, 496, 200, 496, 186, 496, 174, 496, 163, 506, 159, 520, 159, 530, 157, 540, 154, 551, 153, 560, 158, 563, 171, 566, 188, 568, 202, 571, 218, 572, 234, 576, 253, 577, 264, 580, 276, 582, 292, 583, 308, 586, 322, 588, 335, 589, 349, 591, 362, 593, 373, 594, 384, 596, 397, 597, 408, 598, 418],
    [521, 198, 521, 209, 528, 217, 533, 208, 533, 197, 525, 190, 520, 199],
    [178, 364, 192, 364, 203, 361, 212, 356, 222, 352, 234, 349, 247, 345, 257, 344, 268, 346, 277, 352, 287, 359, 298, 363, 308, 359, 317, 354, 329, 348, 341, 342, 351, 341, 361, 344, 373, 351, 381, 358, 390, 363, 401, 365, 413, 363, 422, 358, 432, 355, 442, 358, 452, 362, 463, 362, 473, 359],
    [154, 310, 165, 310, 176, 310, 187, 310, 202, 310, 214, 310, 225, 310, 238, 310, 249, 310, 261, 310, 275, 310, 286, 310, 299, 310, 311, 310, 323, 310, 333, 311, 344, 311, 356, 311, 367, 311, 378, 311, 390, 311, 403, 312, 414, 312, 426, 312, 437, 312, 448, 312, 459, 312, 471, 312, 481, 311],
    [500, 159, 500, 148, 499, 138, 508, 133, 518, 135, 529, 135, 541, 135, 551, 134, 556, 143, 557, 154],
    [541, 135, 538, 145, 537, 155],
    [518, 134, 519, 146, 519, 157],
    [505, 112, 514, 107, 524, 103, 535, 103, 545, 105, 551, 114],
    [507, 114, 508, 124, 508, 135],
    [551, 118, 550, 128],
    [511, 122, 522, 121, 532, 119, 543, 119],
    [517, 391, 515, 379, 515, 368, 515, 357, 517, 347, 522, 338, 531, 333, 538, 341, 539, 353, 539, 364, 539, 375, 539, 386, 538, 396]
]

let strokes = croquetilla;

//let drawingMode = 'POLYLINE';
let drawingMode = 'SKETCH';

function setup() {
    createCanvas(windowWidth, windowHeight)
        // console.log(`${windowWidth}, ${windowHeight}`)
        //noStroke()
    strokeWeight(3);
    stroke(0);
    noFill()
    background(255)
}

function draw() {
    background(255)

    if (strokes.length) {
        for (let i = 0; i < strokes.length; i++) {
            let stroke = strokes[i];
            beginShape()
            for (let j = 0; j < stroke.length; j += 2) {
                let point = [stroke[j], stroke[j + 1]];
                vertex(point[0], point[1]);
                //ellipse(point[0], point[1], 3, 3)
            }
            endShape();
        }
    } else {
        ellipse(0, 0, 0, 0)
    }

}

function mouseDragged() {
    if (drawingMode == 'SKETCH') {
        tryAddPoint(mouseX, mouseY)
    }
}

function mousePressed() {
    if (mouseButton == RIGHT) {
        strokes = []
    } else {
        if (drawingMode == 'POLYLINE') {
            tryAddPoint(mouseX, mouseY)
        } else if (drawingMode == 'SKETCH') {
            strokes.push([mouseX, mouseY])
        }
    }
}

function mouseReleased() {
    console.log(JSON.stringify(strokes));
}

function windowResized() {
    resizeCanvas(windowWidth, windowHeight)
}

// Helpers

function tryAddPoint(x, y) {
    let lastStroke = strokes[strokes.length - 1];
    let lastPoint = [lastStroke[lastStroke.length - 2], lastStroke[lastStroke.length - 1]]
    const d = distance(lastPoint[0], lastPoint[1], x, y)
    if (d > 10) {
        addPoint(x, y)
    }
}

function addPoint(x, y) {
    strokes[strokes.length - 1].push(x)
    strokes[strokes.length - 1].push(y)
}

function distance(x0, y0, x1, y1) {
    const dx = x1 - x0;
    const dy = y1 - y0;
    return Math.sqrt(dx * dx + dy * dy)
}